
FROM --platform=linux/arm64 ubuntu:latest
# Install curl first, then Node.js, corepack, and pnpm
RUN apt-get update && apt-get install -y curl \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g corepack \
    && corepack enable \
    && corepack prepare pnpm@9.12.0 --activate \
    && rm -rf /var/lib/apt/lists/*

ARG RUNNER_VERSION="2.329.0"
ENV RUNNER_VERSION=${RUNNER_VERSION}

# Add a user for the runner
RUN useradd -m -s /bin/bash runner

# Install necessary packages including .NET Core dependencies
RUN apt-get update && apt-get install -y \
    curl \
    jq \
    python3 \
    sudo \
    libicu-dev \
    libkrb5-3 \
    zlib1g \
    iputils-ping \
    openssh-client \
    && rm -rf /var/lib/apt/lists/*

# Set up the runner user
RUN echo "runner ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

WORKDIR /home/runner

# Set up the actions runner directory (actual binary may be downloaded at runtime)
RUN mkdir -p /home/runner/actions-runner \
    && chown -R runner:runner /home/runner/actions-runner

# Note: runner binary and its dependency installer will be downloaded/ran at container start

# Copy the runtime start script and make it executable
COPY ["Docker Image/start.sh", "/home/runner/start.sh"]
RUN chown runner:runner /home/runner/start.sh && chmod +x /home/runner/start.sh

# Switch to runner user
USER runner

# Define the entrypoint
ENTRYPOINT ["/home/runner/start.sh"] 